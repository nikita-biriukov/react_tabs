{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","chosenTab","find","tab","id","className","map","classNames","href","onClick","event","preventDefault","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uLAcaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAYH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAErE,OACE,qCACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,OACE,oBACEE,UAAWE,IAAW,CACpB,YAAaN,EAAUG,KAAOD,EAAIC,KAFtC,SAME,mBACEI,KAAI,WAAML,EAAIC,IACdK,QAAS,SAACC,GACRA,EAAMC,iBAEFR,EAAIC,KAAOJ,GACbD,EAAcI,IANpB,SAUGA,EAAIS,SAZFT,EAAIC,WAmBnB,8BACE,qBAAKC,UAAU,QAAQ,UAAQ,cAA/B,mBACGP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,YAD/B,aACG,EAA4Ca,gBC/C1Cf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOkB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKZ,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGW,EAAYJ,SAGf,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAekB,EACfjB,cAAegB,EAAYZ,SCrBnCc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aa53386c.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const chosenTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                className={classNames({\n                  'is-active': chosenTab.id === tab.id,\n                })}\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  onClick={(event) => {\n                    event.preventDefault();\n\n                    if (tab.id !== selectedTabId) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div>\n        <div className=\"block\" data-cy=\"tab-content\">\n          {tabs.find(tab => tab.id === selectedTabId)?.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={setSelectedTab}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}